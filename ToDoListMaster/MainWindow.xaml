<Window x:Class="ToDoListMaster.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ToDoListMaster"
        mc:Ignorable="d"
        Title="MainWindow" Height="900" Width="460">
    <Grid>
        <!-- Основная сетка для разделения областей -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Верхняя панель -->
            <RowDefinition Height="Auto"/>
            <!-- Поле поиска -->
            <RowDefinition Height="*"/>
            <!-- Основная область -->
            <RowDefinition Height="Auto"/>
            <!-- Нижняя панель -->
        </Grid.RowDefinitions>

        <!-- Верхняя панель с вкладками -->
        <Grid Grid.Row="0" Background="White" Height="100">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- ComboBox для выбора категории -->
            <ComboBox x:Name="CategoryFilterComboBox" Width="110" Height="30" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="16"
                      ItemsSource="{Binding Categories}" DisplayMemberPath="Name" SelectedValuePath="Id" Margin="20,20,0,0"
                      SelectionChanged="CategoryFilterComboBox_SelectionChanged"/>

            <!-- Текущая вкладка "СЕГОДНЯ" с выпадающим меню -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,60,317,0">
                <TextBlock Text="СЕГОДНЯ" FontSize="18" FontWeight="Bold" VerticalAlignment="Center"/>
                <Button Content="▼" Width="30" Height="30" Margin="5" Background="Transparent" BorderThickness="0"/>
            </StackPanel>
        </Grid>

        <!-- Основная область для списка задач -->
        <ListBox Grid.Row="2" Background="White" BorderThickness="0" Margin="10,37,10,10" 
                 ItemsSource="{Binding TaskView}" MouseDoubleClick="TaskListBox_MouseDoubleClick">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <!-- Border растягивается на всю ширину -->
                    <Border Background="#E0F7FA" CornerRadius="10" Margin="5" Padding="10" HorizontalAlignment="Stretch">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <!-- Основная информация о задаче -->
                            <StackPanel Orientation="Horizontal" Grid.Column="0">
                                <TextBlock Text="{Binding Title}" FontSize="16" Margin="5"/>
                                <TextBlock Text="{Binding DueDate, StringFormat='Due: {0:dd.MM.yyyy}'}" FontSize="14" Foreground="Gray" Margin="5"/>
                                <TextBlock Text="{Binding Category.Name}" FontSize="14" Foreground="Blue" Margin="5"/>
                            </StackPanel>
                            <!-- Флажок (всегда отображается) -->
                            <Image Grid.Column="1" Width="20" Height="20" Margin="5" Source="{Binding Notes}"/>
                        </Grid>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <!-- Устанавливаем растяжку содержимого и убираем стандартное выделение -->
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>

        <!-- Нижняя панель навигации -->
        <Grid Grid.Row="3" Background="White" Height="60">
            <Grid.Effect>
                <DropShadowEffect Color="Black" Direction="270" ShadowDepth="2" BlurRadius="10" Opacity="0.3"/>
            </Grid.Effect>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Button Content="≡" Width="60" Height="60" Background="Transparent" BorderThickness="0" FontSize="20"/>
                <Button Content="📋" Width="60" Height="60" Background="Transparent" BorderThickness="0" FontSize="20" Click="OpenMainWindowButton_Click"/>
                <Button Content="📅" Width="60" Height="60" Background="Transparent" BorderThickness="0" FontSize="20" Click="OpenCalendarWindowButton_Click"/>
                <Button Content="👤" Width="60" Height="60" Background="Transparent" BorderThickness="0" FontSize="20"/>
            </StackPanel>
        </Grid>

        <!-- Плавающая кнопка "+" -->
        <Button Content="+" Width="60" Height="60" Background="#4FC3F7" Foreground="White" FontSize="30" 
                BorderThickness="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,23,21" Click="AddTaskButton_Click" Grid.Row="2">
            <Button.Effect>
                <DropShadowEffect Color="Black" ShadowDepth="5" BlurRadius="10" Opacity="0.5"/>
            </Button.Effect>
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" CornerRadius="30">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Window>